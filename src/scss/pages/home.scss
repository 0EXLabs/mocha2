@use "../global/" as *;
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Noto+Sans&family=Noto+Sans+JP&family=Jura&family=Noto+Serif&family=Comfortaa&family=Roboto+Serif:ital,opsz,wght@1,8..144,100&family=Roboto&display=swap');

$notosans: 'Noto Sans JP', 'Noto Sans', sans-serif;
$notoserif: 'Noto Serif', serif;
$bebas: 'Bebas Neue', cursive;
$jura: 'Jura', sans-serif;
$roboto: 'Roboto', sans-serif;;
$robotoSerif: 'Roboto Serif', serif;
$comfortaa: 'Comfortaa', cursive;

@font-face {
	font-family: 'gomocha';
	src: URL('../assets/fonts/GoMocha.ttf') format('truetype');
  }
  @font-face {
	font-family: 'kidzhood';
	src: URL('../assets/fonts/kidzhood.otf') format('truetype');
  }
.content-wrapper {
	width: 100%;
	position: relative;
}

body {
	width: 100%;
	height: 100%;
	overflow: hidden;
}

.tp-dfwv {
	z-index: 100;
}

.content {
	display: flex;
	width: 100%;
	height: 100%;
	z-index: 1;
	flex-direction: column;
}

.section {
	position: absolute;
	width: 100%;
	height: 100%;
	left: 0;
	top: 0;
	pointer-events: none;
	
	&[data-visible="true"] {
		pointer-events: auto;
	}
	
	&-wrap {
		position: relative;
		flex: 1;
		width: 100%;
		height: 100%;
		
		canvas {
			position: absolute;
			width: 100%;
			height: 100%;
			left: 0;
			top: 0;
			z-index: 0;
		}
	}
}
.header {
	position: relative;
	display: flex;
	width: 100%;
	height: 70px;
	align-items: center;
	justify-content: center;
	z-index: 10;

	@include sp {
		height: 50px;
	}

	&-logo {

		opacity: 0;
		transition: opacity 3.0s;
		transition-delay: 0.5s;
		
		&[data-visible="true"] {
			opacity: 1;
		}
		
		svg {
			width: 180px;
			
			@include sp {
				width: 135px;
				height: 40px;
			}

		}

	}
}

.footer {
	position: relative;
	width: 100%;
	height: 60px;
	background-color: #000;
	color: #fff;
	padding: 0 6%;

	display: flex;
	align-items: center;
	justify-content: space-between;
	

	@include sp {
		height: 50px;
		padding: 0 5%;
	}

	&-timeline {
	
		position: relative;

		display: flex;
		justify-content: space-around;

		opacity: 0;
		transition: opacity 2s;
		width: 20%;
		max-width: 200px;

		@include sp {
			position: relative;
			flex: 1;
			left: unset;
			padding-right: 2vw;
		}
		
		&[data-visible="true"] {
			opacity: 1;
		}
		
		&-item {
			width: 20px;
			cursor: pointer;
			position: relative;
		
			display: flex;
			align-items: center;
			justify-content: center;

			&::before {
				content: "";
				width: 100%;
				padding-top: 100%;
			}
			
			&::after {
				content: "";
				position: absolute;
				width: 100%;
				height: 100%;
				border-radius: 50% 50%;
				background-color: #fff;
				transform: scale(0.3);
				transition: transform 0.5s ease-out, background-color 0.5s ease-out;
				z-index: 1;
			}

			&[data-state="ready" ] {
				&::after {
					background-color: #555;
				}
			}
			
			&[data-state="viewing" ] {
				pointer-events: none;
				&::after {
					transform: scale(0.6);
				}
			}

			&:hover {
				&::after {
					transform: scale(0.5);
				}
			}
		}

	}

	

	&-contract {
		display: flex;
		align-items: center;
		gap: 40px;
		opacity: 0;
		transition: opacity 2s;
		@include sp {
			gap: 10px;
			
		}
		p {
			font-family: 'gomocha', sans-serif;
			font-size: 24px;
			color: #ffffff;
			@include sp {
				font-size: 12px;
				
			}
		}
		&[data-visible="true"] {
			opacity: 1;
		}
		.presale-button {
			background-color: #FDECA6;
			color: black;
			border-top:  #2e1c14 2px solid ;
			border-left:  #2e1c14 3px solid ;
			border-bottom:  #2e1c14 3px solid ;
			border-right:  #2e1c14 3px solid ;
			padding: 10px 25px;
			border-radius: 28px;
			cursor: pointer;
			font-size: 24px;
			text-transform: uppercase;
			font-family: 'gomocha', sans-serif;
			@include sp {
				font-size: 12px;
				padding: 8px 20px;
			}
			&:hover {
				opacity: 0.8;
			}
			transition: background-color 0.5s ease-in-out;
		}
		
		.footer[data-section="1"] & .presale-button {
			background-color: #FDECA6;
		}

		.footer[data-section="2"] & .presale-button {
			background-color: #f9a6c0;
		}

		.footer[data-section="3"] & .presale-button {
			background-color: #FFCD53;
		}

		.footer[data-section="4"] & .presale-button {
			background-color: #D90000;
		}

		.footer[data-section="5"] & .presale-button {
			background-color: #A1DEFE;
		}

		.footer[data-section="6"] & .presale-button {
			background-color: #FFCD53;
		}
		
	}
}

.subtitles {
	position: absolute;
	width: 100%;
	bottom: 60px;
	color: #fff;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	pointer-events: none;

	@include sp {
		bottom: 80px;
	}

	&-text {
		display: inline-block;
		text-align: center;
		user-select: none;


		span {
			background-color: rgba($color: #000000, $alpha: 0.9);
			padding: 5px 10px;
			font-family: $notosans;
			line-height: 2.0em;
			font-size: min( 15px, 2vw );
			box-decoration-break: clone;
			
			&[data-visible="false"] {
				opacity: 0;
				transition: opacity .5s;
			}
			
			@include sp {
				font-size: 2.8vw;
			}
		}
		
	}
}
.section1{
	display: flex;
	
	padding-top: 120px;
	justify-content: center;     // horizontal center
	align-items: flex-start;
	height: 100vh;
	width: 100vw;
	&[data-visible="true"] {
		.info-sc1 {
			opacity: 1;
			transition: opacity .5s;
		}
	}
	@include sp{
		margin-left: 0px ;
		align-items:center;
	}
	@media only screen and (max-width: 900px) and (orientation: landscape) {
		padding-bottom: 10px;
		
	}
}
.info-sc1 {
	
   
 text-align: center;
    color: black; /* Assuming text inside should be black for contrast */
    padding: 15px;
    
    z-index: 100; /* Ensure it's on top of other content */
    width: 490px; /* Example width, adjust as necessary */
    
	font-family: 'gomocha', sans-serif;
	
	pointer-events: none;
	font-size: 1.5rem;
    @include sp {
        bottom: 60px; /* Adjusted for 50px mobile footer + 10px margin */
		font-size: 1.1rem;
		width: 330px;
		left: 5%;
		
    }
	opacity: 0;
	transition: opacity .5s;
	// Explicit media query for small screens in portrait orientation
	@media only screen and (max-width: 800px) and (orientation: portrait) {
		font-size: 1.1rem; // Mobile portrait font size
	}

	// Explicit media query for small screens in landscape orientation
	@media only screen and (max-width: 900px) and (orientation: landscape) {
		font-size: 0.9rem; // Adjusted smaller font size for mobile landscape

	}
}
.section2 {
	
	pointer-events: none;
	
	&[data-visible="true"] {
		pointer-events: auto;		
	}
	
	&-head {
		position: absolute;
		width: 40%;
		transform: translateX(-100%) rotate(0);
		left: -2%;
		top: -15vw;

		transition: transform .5s cubic-bezier(.74,-0.02,.94,-0.32);
		
		[data-visible="true"] &{
			opacity: 1;
			transform: rotate(45deg) translateX(0%);
			transition: transform .7s cubic-bezier(0,1.33,.37,.99);
			transition-delay: 0.7s;

		}

	}

}

.section3 {
	&[data-visible="true"] {
		.info-row {
			opacity: 1;
			.info-item {
				opacity: 1; /* Make info-item visible when section3 is visible */
			}
		}
	}
}

.info-row {
	pointer-events: none;
	display: flex;
	justify-content: center;
	gap: 150px;
	align-items: left; /* Set to center */
	position: absolute;
	bottom: 0;
	width: 100%;
	padding: 20px 0;
	z-index: 10;
	transition: opacity 1.0s;

	@include sp {
		gap: 30px;
		padding: 10px 0;
	}
}

.info-item {
	color: #fff;
	font-family: 'gomocha', sans-serif;
	font-size: 0.8rem; /* Smaller font size for the text */
	text-align: left; /* Center align text */
	opacity: 0; /* Initially hidden */
	transition: opacity 0.5s; /* Smooth transition for visibility */

	@include sp {
	  font-size: 0.7rem; /* Smaller font size for text on mobile */
	}
	br {
	  display: block;
	}
	.percentage-value {
	  color: #fff;
	  /* Removed: opacity: 0; */
	  font-size: 2.5rem; /* Bigger font size for the number and percentage */
	  text-align: center; /* Center align text */
	  @include sp {
		font-size: 1.8rem; /* Smaller font size for percentage on mobile */
	  }
	  br {
		display: block;
	  }
	}
}.section4{
	display: flex;
	margin-left: 100px ;
	
	flex-direction: column;
	justify-content: flex-end;  /* vertical: bottom */
	align-items: flex-start;    /* horizontal: left */
	padding-bottom: 50px;
	&[data-visible="true"] {
		.info-sc4 {
			opacity: 1;
			transition: opacity .5s;
		}
	}
	@include sp{
		margin-left: 0px ;
		align-items:center;
	}
	@media only screen and (max-width: 900px) and (orientation: landscape) {
		padding-bottom: 10px;
		
	}
}

.info-sc4 {
	
   
    background-color: white;
    color: black; /* Assuming text inside should be black for contrast */
    padding: 15px;
    border-radius: 15px; /* Adjust as needed for desired roundness */
	border: 2px solid black;
	border-color: #000000 ;
    z-index: 100; /* Ensure it's on top of other content */
    width: 490px; /* Example width, adjust as necessary */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Optional: add a subtle shadow */
	font-family: 'gomocha', sans-serif;
	
	pointer-events: none;
	font-size: 1.5rem;
    @include sp {
        bottom: 60px; /* Adjusted for 50px mobile footer + 10px margin */
		font-size: 1.1rem;
		width: 330px;
		left: 5%;
		
    }
	opacity: 0;
	transition: opacity .5s;
	// Explicit media query for small screens in portrait orientation
	@media only screen and (max-width: 800px) and (orientation: portrait) {
		font-size: 1.1rem; // Mobile portrait font size
	}

	// Explicit media query for small screens in landscape orientation
	@media only screen and (max-width: 900px) and (orientation: landscape) {
		font-size: 0.9rem; // Adjusted smaller font size for mobile landscape

	}
}

.section5 {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column; // Changed to column to stack content vertically
    align-items: center;
    justify-content: center;
    z-index: 0;
    pointer-events: none;
    opacity: 0;
    transition: opacity 1.0s;
    
    &[data-visible="true"] {
        opacity: 1;
        transition-delay: .5s;
    }
    
    &-content {
        width: 90%;
        max-width: 800px;
        
        display: flex;
        flex-direction: column; // Changed to column for vertical stacking of content
        // justify-content: space-around; // Not relevant if content is stacked vertically
        align-items: center; // Center items horizontally if they don't take full width

        // If you still want an image or other elements, they would be separate flex items here.
        // For text, we'll primarily use section5-text-group or similar.
    }
    
    // Removed section5-content-sp for this example, assuming text is the primary focus.
    // If you have an image, it would be another direct child of section5-content.

    &-text-group { // New wrapper for all text to manage it as a single block
        width: 100%; // Or your desired width
        max-width: 800px; // Maintain max-width
        display: block; // Or flex-direction: column if you want to explicitly manage paragraphs

        @include sp {
            padding: 0 3px;     
            font-size: 16px;
            letter-spacing: 0.1em;
        }
    }

    &-text {
        position: relative;
        // height: 50vh; // This might limit the number of lines visible if you want free flow
        max-height: 100%;
        pointer-events: none;
        display: inline-block; // Make p tags block-level to ensure they take full width and stack
        padding: 10px 10px; // Adjust padding as needed
        z-index: 0;
        text-align: center; // Example: center text lines

        @include sp {
            padding: 0 3px;     
            font-size: 16px;
            letter-spacing: 0.1em;
            // height: auto; // Let height adjust to content for row by row
        }

        // Removed the @for loop for z-index as it's typically for layering effects,
        // which might not be needed for simple row-by-row text.
        // If needed for other effects, re-evaluate its placement.
        
        &-inner {
            position: relative;
            display: inline-block; // Keep inline-block for individual span effects if desired
            padding: 0; // Padding handled by parent .section5-text

            span {
                position: relative;
                display: inline-block; // Important for transition of individual words/chars
                font-family: 'gomocha', sans-serif;
                font-size: 5em;
                letter-spacing: 0.35em;
                color: rgba($color: #fff, $alpha: 0.0);

                right: 15px;
                transition: color 2.0s, right 1.0s;
                
                [data-visible5line="true"] &{
                    color: rgba($color: #fff, $alpha: 1.0);
                    right: 0px;
                    
                    @for $i from 0 through 30 {
                        &:nth-child(#{$i}) {
                            transition-delay: #{0.2 + $i * 0.06}s;
                        }
                    }
                }
            }

            &::before {
                content: "";
                position: absolute;
                width: 100%;
                height: 100%;
                left: 0;
                top: 0;
                
                // z-index: 0; // Usually best to manage z-index carefully, might not need here

                transform-origin: top;
                transform: scaleY( 0.0 );
                transition: transform 1.5s;

                [data-visible5line="true"] & {
                    transform: scaleY( 1.0 );
                }
            }
        }
		
		&-inner2 {
            position: relative;
            display: inline-block; // Keep inline-block for individual span effects if desired
            padding: 0; // Padding handled by parent .section5-text

            span {
                position: relative;
                display: inline-block; // Important for transition of individual words/chars
				font-family: 'gomocha', sans-serif;
                font-size: 1.5em;
                letter-spacing: 0.15em;
                color: rgba($color: #fff, $alpha: 0.0);

                right: 15px;
                transition: color 2.0s, right 1.0s;
                
                [data-visible5line="true"] &{
                    color: rgba($color: #fff, $alpha: 1.0);
                    right: 0px;
                    
                    @for $i from 0 through 30 {
                        &:nth-child(#{$i}) {
                            transition-delay: #{0.2 + $i * 0.06}s;
                        }
                    }
                }
            }

            &::before {
                content: "";
                position: absolute;
                width: 100%;
                height: 100%;
                left: 0;
                top: 0;
                
                // z-index: 0; // Usually best to manage z-index carefully, might not need here

                transform-origin: top;
                transform: scaleY( 0.0 );
                transition: transform 1.5s;

                [data-visible5line="true"] & {
                    transform: scaleY( 1.0 );
                }
            }
        }
		
    }
	

    .button-primary {
        display: inline-block; // Makes the link behave like a block-level element but takes only necessary width
        padding: 15px 30px; // Adjust padding to control button size
        margin-top: 20px; // Add some space above the button
        background-color: #B1D37C; // Example button background color (blue)
        color: #000000; // Text color (white)
        text-decoration: none; // Remove underline from link
        font-family: 'gomocha', sans-serif; // Use your desired font
        font-size: 1.2em;
        letter-spacing: 0.1em;
        border-radius: 15px; // Slightly rounded corners
        transition: background-color 0.3s ease, transform 0.2s ease; // Smooth transitions for hover effects
        cursor: pointer; // Indicate it's clickable

        &:hover {
            background-color: #9ebc6e; // Darker blue on hover
            transform: translateY(-2px); // Slight lift on hover
        }

        // You might want to apply the data-visible5line logic here if you want it to animate in
        opacity: 1;
        transform: translateY(15px);
        transition: opacity 1.0s ease, transform 1.0s ease;

        [data-visible5line="true"] & {
            opacity: 1;
            transform: translateY(0);
            transition-delay: 0.8s; // Adjust delay to fit your animation sequence
        }
    }

}

.section6 {
	
	position: relative;
	
	width: 100%;
	height: 100%;

	&-main {
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;

		opacity: 0;
		transition: opacity 1s;
		
		[data-visible="true"] & {
			
			opacity: 1;
			transition-delay: 1s;
			
		}
		
		&-head {
			font-family: $robotoSerif;
			font-size: 2.5vw;
			font-weight: normal;
			color: #fff;
			margin-bottom: 50px;
			text-align: center;

			@include sp{
				font-size: 7.0vw;
				line-height: 1.8em;
			}

			#next {
				display: inline;
				opacity: 0;
				transition: opacity 1s;
				transition-delay: 1.5s;

				[data-visible="true"] &{
					opacity: 1;
				}
				span {
					display: inline-block;
				}
			}
			
		}

		&-link {

			a {
				position: relative;
				display: block;
				text-decoration: none;
				font-family: $robotoSerif;
				font-size: 2.0vw;
				font-weight: 200;
				color: #fff;

				@include sp{
					font-size: 4.7vw;
					line-height: 1.8em;
				}
				
				.arrow {
					position: absolute;
					left: 104%;
					bottom: 20%;
					max-width: 50%;
					transition: transform .4s;
				}

				&:hover {
					.arrow {
						transform: translateX(5px);
					}
				}
			}
		}
	}
	
	&-link {
		position: relative;
		left: 50%;
		bottom: 80px;
		transform: translateX(-50%);
		
		width: 60%;
		max-width: 300px;

		display: flex;
		justify-content: space-around;
		align-items: center;
		
		opacity: 0;
		transition: opacity 1s;
		z-index: 11;
		
		[data-visible="true"] & {
			
			opacity: 1;
			transition-delay: 1s;
			
		}
		
		&-item {
			padding: 0 5px;

			&:nth-child(2) {
				padding: 0px;
			}
			
			a {
				display: block;
				
				&:hover {
					svg {
						transform: translateY(-5px);
					}
				}
			}
			
			svg {
				width: 100%;
				transition: transform .4s;
			}
			

		}


	}
}

.loading {
	position: absolute;
	width: 100%;
	height: 100%;
	background-color: #a1defe;
	z-index: 100;
	padding-top: 125px;
	padding-left: 15px;
	display: flex;
	justify-content: center;
	align-items: center;

	transition: opacity 1.5s;
	
	&[data-visible="false"] {
		opacity: 0;
		pointer-events: none;
	}
	
	&-logo {
		width: 30%;
		max-width: 200px;
		opacity: 1;
		pointer-events: none;
		transition: opacity .9s;
		
		&[data-visible="false"] {
			opacity: 1;
		}

		svg {
			width: 100%;
		}
	}
}

.intro {

	position: fixed;
	width: 100%;
	height: 100%;

	&-inner {
		position: relative;
		width: 100%;
		height: 100%;
		color: #2e1c14;

	}

	&-text {

		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		
		display: flex;
		justify-content: center;
		align-items: center;
		
		pointer-events: none;
		
		@include pc {
			opacity: 0;
		}

		&-item {
			position: absolute;
			color: #2e1c14;
			font-family: 'kidzhood', sans-serif;
			font-size: 20px;
			line-height: 1.5em;
			text-align: center;

			width: 95%;

			opacity: 0;
			transition: opacity 1s;

			&[data-visible="true"] {
				opacity: 1;
			}
		}
	}
	
	&-skip {
		position: absolute;
		right: 55px;
		bottom: 70px;
		color: #fff;

		transform: translateX(250%);
		transition: transform .8s;

		pointer-events: none;
		-webkit-tap-highlight-color: transparent;

		&[data-skipVisible="true"] {
			
			transform: translateX(0);
			cursor: pointer;
			pointer-events: auto;
			
		}

		$this: &;

		@include sp {
			right: 40px;
		}
		
		&:hover {
			#{$this}-inner {
				@keyframes jump {
					0% {
						transform: translateY(0);
						animation-timing-function: ease-out;
					}
					50% {
						transform: translateY( -10px );
						animation-timing-function: ease-in;
					}
					100% {
						transform: translateY(0);
					}
				}
				
				animation: jump 0.2s 0s 1 normal;
			}
		}
		
		&-inner {
			position: relative;
		}
		
		&-txt {
			position: absolute;
			width: 100%;

			opacity: 0;
			transform: rotate( -45deg ) scale(0);
			transition: opacity .1s, transform .5s cubic-bezier(.4,1.44,.74,1);
			
			[data-skipVisible="true"] & {
				
				transition-delay: 1s;
				transform: rotate( 0 ) scale(1);
				opacity: 1;
				
			}

			&-item {
				position: absolute;
				left: 40%;
				bottom: 100%;

				opacity: 0;

				&.skip {
					[data-skipTxt="skip"] & {
						opacity: 1;
					}
				}
				
				&.ok {
					[data-skipTxt="ok"] & {
						opacity: 1;
					}
				}
				
			}
		}

		&-baku {

			transition: transform .5s;

			[data-skipVisible="false"] & {
				transform: scaleX(-1);
			}
		}
	}

}

.scroll {
	position: absolute;
	bottom: 80px;
	width: 100px;
	height: 100px;
	border-radius: 50% 50%;
	// left: 5%;
	left: 50%;

	z-index: 11;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
	pointer-events: none;
	
	transform: translateX(-50%);
	opacity: 0;
	transition: opacity .5s, transform .2s;

	&[data-visible="true"] {
		opacity: 1;
		pointer-events: auto;
	}
	
	@include pc {
		&:hover {
			transform: translateX(-50%) scale(0.95);
		}
	}
	
	&[data-visible="false"] {
		transform: translateX(-50%) scale(0.0);
	}

	@include sp {
		width: 72px;
		height: 72px;
		bottom: 70px;
		left: 50%;
		transform: translateX(-50%);
	}

	&-fillCircle {
		position: absolute;
		width: 100%;
		height: 100%;
		background-color: #000;
		transform: translate(-50%, -50%) scale(0);
		border-radius: 50% 50%;
		transition: transform .2s ease-out;
		
		@include sp {
			display: none;
		}
	}

	$this: &;

	&:hover {
		#{$this}-fillCircle {
			transform: translate(-50%, -50%) scale(2);
		}
	
	}

	&-circle {
		@keyframes scrollRotate {
			0% {
				transform: rotate(0);
			}
			100% {
				transform: rotate(360deg);
			}
		}

		position: absolute;
		width: 100%;
		height: 100%;
		left: 0;
		top: 0;
		animation: scrollRotate 2s infinite linear;
		pointer-events: none;
	}

	&-btn {
		width: 100%;
		height: 100%;
		background-color: transparent;
		border: none;
		font-size: 11px;
		font-family: $notosans;
		letter-spacing: .2em;
		color: #fff;
		cursor: pointer;
		z-index: 1;
		
		@include sp {
			font-size: 9px;	
		}
	}
}

.intro-skip {
	transition: opacity 0.5s ease-out, transform 0.8s;
	transform: translateX(250%); /* Set initial position off-screen to the right */

	&[data-skipVisible="false"] {
		opacity: 0;
		pointer-events: none;
	}

	&[data-skipVisible="true"] {
		opacity: 1;
		pointer-events: auto;
		transform: translateX(0);
	}
}